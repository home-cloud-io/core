// @generated by protoc-gen-es v1.6.0 with parameter "target=ts"
// @generated from file platform/daemon/v1/system.proto (package platform.daemon.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message platform.daemon.v1.SystemStats
 */
export class SystemStats extends Message<SystemStats> {
  /**
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * @generated from field: platform.daemon.v1.ComputeStats compute = 3;
   */
  compute?: ComputeStats;

  /**
   * @generated from field: platform.daemon.v1.MemoryStats memory = 4;
   */
  memory?: MemoryStats;

  /**
   * @generated from field: repeated platform.daemon.v1.DriveStats drives = 5;
   */
  drives: DriveStats[] = [];

  constructor(data?: PartialMessage<SystemStats>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "platform.daemon.v1.SystemStats";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "start_time", kind: "message", T: Timestamp },
    { no: 2, name: "end_time", kind: "message", T: Timestamp },
    { no: 3, name: "compute", kind: "message", T: ComputeStats },
    { no: 4, name: "memory", kind: "message", T: MemoryStats },
    { no: 5, name: "drives", kind: "message", T: DriveStats, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SystemStats {
    return new SystemStats().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SystemStats {
    return new SystemStats().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SystemStats {
    return new SystemStats().fromJsonString(jsonString, options);
  }

  static equals(a: SystemStats | PlainMessage<SystemStats> | undefined, b: SystemStats | PlainMessage<SystemStats> | undefined): boolean {
    return proto3.util.equals(SystemStats, a, b);
  }
}

/**
 * @generated from message platform.daemon.v1.ComputeStats
 */
export class ComputeStats extends Message<ComputeStats> {
  /**
   * @generated from field: float user_percent = 1;
   */
  userPercent = 0;

  /**
   * @generated from field: float system_percent = 2;
   */
  systemPercent = 0;

  /**
   * @generated from field: float idle_percent = 3;
   */
  idlePercent = 0;

  constructor(data?: PartialMessage<ComputeStats>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "platform.daemon.v1.ComputeStats";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_percent", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 2, name: "system_percent", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 3, name: "idle_percent", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ComputeStats {
    return new ComputeStats().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ComputeStats {
    return new ComputeStats().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ComputeStats {
    return new ComputeStats().fromJsonString(jsonString, options);
  }

  static equals(a: ComputeStats | PlainMessage<ComputeStats> | undefined, b: ComputeStats | PlainMessage<ComputeStats> | undefined): boolean {
    return proto3.util.equals(ComputeStats, a, b);
  }
}

/**
 * @generated from message platform.daemon.v1.MemoryStats
 */
export class MemoryStats extends Message<MemoryStats> {
  /**
   * @generated from field: uint64 total_bytes = 1;
   */
  totalBytes = protoInt64.zero;

  /**
   * @generated from field: uint64 used_bytes = 2;
   */
  usedBytes = protoInt64.zero;

  /**
   * @generated from field: uint64 cached_bytes = 3;
   */
  cachedBytes = protoInt64.zero;

  /**
   * @generated from field: uint64 free_bytes = 4;
   */
  freeBytes = protoInt64.zero;

  /**
   * @generated from field: uint64 available_bytes = 5;
   */
  availableBytes = protoInt64.zero;

  constructor(data?: PartialMessage<MemoryStats>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "platform.daemon.v1.MemoryStats";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "total_bytes", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "used_bytes", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "cached_bytes", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "free_bytes", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "available_bytes", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MemoryStats {
    return new MemoryStats().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MemoryStats {
    return new MemoryStats().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MemoryStats {
    return new MemoryStats().fromJsonString(jsonString, options);
  }

  static equals(a: MemoryStats | PlainMessage<MemoryStats> | undefined, b: MemoryStats | PlainMessage<MemoryStats> | undefined): boolean {
    return proto3.util.equals(MemoryStats, a, b);
  }
}

/**
 * @generated from message platform.daemon.v1.DriveStats
 */
export class DriveStats extends Message<DriveStats> {
  /**
   * @generated from field: string mount_point = 1;
   */
  mountPoint = "";

  /**
   * @generated from field: uint64 total_bytes = 2;
   */
  totalBytes = protoInt64.zero;

  /**
   * @generated from field: uint64 free_bytes = 3;
   */
  freeBytes = protoInt64.zero;

  constructor(data?: PartialMessage<DriveStats>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "platform.daemon.v1.DriveStats";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "mount_point", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "total_bytes", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "free_bytes", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DriveStats {
    return new DriveStats().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DriveStats {
    return new DriveStats().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DriveStats {
    return new DriveStats().fromJsonString(jsonString, options);
  }

  static equals(a: DriveStats | PlainMessage<DriveStats> | undefined, b: DriveStats | PlainMessage<DriveStats> | undefined): boolean {
    return proto3.util.equals(DriveStats, a, b);
  }
}

