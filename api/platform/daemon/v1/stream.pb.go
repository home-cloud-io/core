// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: platform/daemon/v1/stream.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DaemonMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*DaemonMessage_Heartbeat
	//	*DaemonMessage_ShutdownAlert
	//	*DaemonMessage_OsUpdateDiff
	//	*DaemonMessage_CurrentDaemonVersion
	//	*DaemonMessage_SystemStats
	//	*DaemonMessage_DeviceInitialized
	//	*DaemonMessage_UploadFileReady
	//	*DaemonMessage_UploadFileChunkCompleted
	//	*DaemonMessage_SettingsSaved
	//	*DaemonMessage_WireguardInterfaceAdded
	//	*DaemonMessage_WireguardInterfaceRemoved
	//	*DaemonMessage_StunAddress
	Message isDaemonMessage_Message `protobuf_oneof:"message"`
}

func (x *DaemonMessage) Reset() {
	*x = DaemonMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaemonMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaemonMessage) ProtoMessage() {}

func (x *DaemonMessage) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaemonMessage.ProtoReflect.Descriptor instead.
func (*DaemonMessage) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{0}
}

func (m *DaemonMessage) GetMessage() isDaemonMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *DaemonMessage) GetHeartbeat() *Heartbeat {
	if x, ok := x.GetMessage().(*DaemonMessage_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

func (x *DaemonMessage) GetShutdownAlert() *ShutdownAlert {
	if x, ok := x.GetMessage().(*DaemonMessage_ShutdownAlert); ok {
		return x.ShutdownAlert
	}
	return nil
}

func (x *DaemonMessage) GetOsUpdateDiff() *OSUpdateDiff {
	if x, ok := x.GetMessage().(*DaemonMessage_OsUpdateDiff); ok {
		return x.OsUpdateDiff
	}
	return nil
}

func (x *DaemonMessage) GetCurrentDaemonVersion() *CurrentDaemonVersion {
	if x, ok := x.GetMessage().(*DaemonMessage_CurrentDaemonVersion); ok {
		return x.CurrentDaemonVersion
	}
	return nil
}

func (x *DaemonMessage) GetSystemStats() *SystemStats {
	if x, ok := x.GetMessage().(*DaemonMessage_SystemStats); ok {
		return x.SystemStats
	}
	return nil
}

func (x *DaemonMessage) GetDeviceInitialized() *DeviceInitialized {
	if x, ok := x.GetMessage().(*DaemonMessage_DeviceInitialized); ok {
		return x.DeviceInitialized
	}
	return nil
}

func (x *DaemonMessage) GetUploadFileReady() *UploadFileReady {
	if x, ok := x.GetMessage().(*DaemonMessage_UploadFileReady); ok {
		return x.UploadFileReady
	}
	return nil
}

func (x *DaemonMessage) GetUploadFileChunkCompleted() *UploadFileChunkCompleted {
	if x, ok := x.GetMessage().(*DaemonMessage_UploadFileChunkCompleted); ok {
		return x.UploadFileChunkCompleted
	}
	return nil
}

func (x *DaemonMessage) GetSettingsSaved() *SettingsSaved {
	if x, ok := x.GetMessage().(*DaemonMessage_SettingsSaved); ok {
		return x.SettingsSaved
	}
	return nil
}

func (x *DaemonMessage) GetWireguardInterfaceAdded() *WireguardInterfaceAdded {
	if x, ok := x.GetMessage().(*DaemonMessage_WireguardInterfaceAdded); ok {
		return x.WireguardInterfaceAdded
	}
	return nil
}

func (x *DaemonMessage) GetWireguardInterfaceRemoved() *WireguardInterfaceRemoved {
	if x, ok := x.GetMessage().(*DaemonMessage_WireguardInterfaceRemoved); ok {
		return x.WireguardInterfaceRemoved
	}
	return nil
}

func (x *DaemonMessage) GetStunAddress() *STUNAddress {
	if x, ok := x.GetMessage().(*DaemonMessage_StunAddress); ok {
		return x.StunAddress
	}
	return nil
}

type isDaemonMessage_Message interface {
	isDaemonMessage_Message()
}

type DaemonMessage_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,1,opt,name=heartbeat,proto3,oneof" bun:"heartbeat" csv:"heartbeat" json:"heartbeat" pg:"heartbeat" yaml:"heartbeat"`
}

type DaemonMessage_ShutdownAlert struct {
	ShutdownAlert *ShutdownAlert `protobuf:"bytes,2,opt,name=shutdown_alert,json=shutdownAlert,proto3,oneof" bun:"shutdown_alert" csv:"shutdown_alert" json:"shutdown_alert" pg:"shutdown_alert" yaml:"shutdownAlert"`
}

type DaemonMessage_OsUpdateDiff struct {
	OsUpdateDiff *OSUpdateDiff `protobuf:"bytes,3,opt,name=os_update_diff,json=osUpdateDiff,proto3,oneof" bun:"os_update_diff" csv:"os_update_diff" json:"os_update_diff" pg:"os_update_diff" yaml:"osUpdateDiff"`
}

type DaemonMessage_CurrentDaemonVersion struct {
	CurrentDaemonVersion *CurrentDaemonVersion `protobuf:"bytes,4,opt,name=current_daemon_version,json=currentDaemonVersion,proto3,oneof" bun:"current_daemon_version" csv:"current_daemon_version" json:"current_daemon_version" pg:"current_daemon_version" yaml:"currentDaemonVersion"`
}

type DaemonMessage_SystemStats struct {
	SystemStats *SystemStats `protobuf:"bytes,5,opt,name=system_stats,json=systemStats,proto3,oneof" bun:"system_stats" csv:"system_stats" json:"system_stats" pg:"system_stats" yaml:"systemStats"`
}

type DaemonMessage_DeviceInitialized struct {
	// Deprecated: use SettingsSaved instead
	DeviceInitialized *DeviceInitialized `protobuf:"bytes,6,opt,name=device_initialized,json=deviceInitialized,proto3,oneof" bun:"device_initialized" csv:"device_initialized" json:"device_initialized" pg:"device_initialized" yaml:"deviceInitialized"`
}

type DaemonMessage_UploadFileReady struct {
	UploadFileReady *UploadFileReady `protobuf:"bytes,7,opt,name=upload_file_ready,json=uploadFileReady,proto3,oneof" bun:"upload_file_ready" csv:"upload_file_ready" json:"upload_file_ready" pg:"upload_file_ready" yaml:"uploadFileReady"`
}

type DaemonMessage_UploadFileChunkCompleted struct {
	UploadFileChunkCompleted *UploadFileChunkCompleted `protobuf:"bytes,8,opt,name=upload_file_chunk_completed,json=uploadFileChunkCompleted,proto3,oneof" bun:"upload_file_chunk_completed" csv:"upload_file_chunk_completed" json:"upload_file_chunk_completed" pg:"upload_file_chunk_completed" yaml:"uploadFileChunkCompleted"`
}

type DaemonMessage_SettingsSaved struct {
	SettingsSaved *SettingsSaved `protobuf:"bytes,9,opt,name=settings_saved,json=settingsSaved,proto3,oneof" bun:"settings_saved" csv:"settings_saved" json:"settings_saved" pg:"settings_saved" yaml:"settingsSaved"`
}

type DaemonMessage_WireguardInterfaceAdded struct {
	WireguardInterfaceAdded *WireguardInterfaceAdded `protobuf:"bytes,10,opt,name=wireguard_interface_added,json=wireguardInterfaceAdded,proto3,oneof" bun:"wireguard_interface_added" csv:"wireguard_interface_added" json:"wireguard_interface_added" pg:"wireguard_interface_added" yaml:"wireguardInterfaceAdded"`
}

type DaemonMessage_WireguardInterfaceRemoved struct {
	WireguardInterfaceRemoved *WireguardInterfaceRemoved `protobuf:"bytes,11,opt,name=wireguard_interface_removed,json=wireguardInterfaceRemoved,proto3,oneof" bun:"wireguard_interface_removed" csv:"wireguard_interface_removed" json:"wireguard_interface_removed" pg:"wireguard_interface_removed" yaml:"wireguardInterfaceRemoved"`
}

type DaemonMessage_StunAddress struct {
	StunAddress *STUNAddress `protobuf:"bytes,12,opt,name=stun_address,json=stunAddress,proto3,oneof" bun:"stun_address" csv:"stun_address" json:"stun_address" pg:"stun_address" yaml:"stunAddress"`
}

func (*DaemonMessage_Heartbeat) isDaemonMessage_Message() {}

func (*DaemonMessage_ShutdownAlert) isDaemonMessage_Message() {}

func (*DaemonMessage_OsUpdateDiff) isDaemonMessage_Message() {}

func (*DaemonMessage_CurrentDaemonVersion) isDaemonMessage_Message() {}

func (*DaemonMessage_SystemStats) isDaemonMessage_Message() {}

func (*DaemonMessage_DeviceInitialized) isDaemonMessage_Message() {}

func (*DaemonMessage_UploadFileReady) isDaemonMessage_Message() {}

func (*DaemonMessage_UploadFileChunkCompleted) isDaemonMessage_Message() {}

func (*DaemonMessage_SettingsSaved) isDaemonMessage_Message() {}

func (*DaemonMessage_WireguardInterfaceAdded) isDaemonMessage_Message() {}

func (*DaemonMessage_WireguardInterfaceRemoved) isDaemonMessage_Message() {}

func (*DaemonMessage_StunAddress) isDaemonMessage_Message() {}

type ServerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*ServerMessage_Heartbeat
	//	*ServerMessage_Shutdown
	//	*ServerMessage_Restart
	//	*ServerMessage_RequestOsUpdateDiff
	//	*ServerMessage_RequestCurrentDaemonVersion
	//	*ServerMessage_ChangeDaemonVersionCommand
	//	*ServerMessage_InstallOsUpdateCommand
	//	*ServerMessage_SetSystemImageCommand
	//	*ServerMessage_SetUserPasswordCommand
	//	*ServerMessage_SetTimeZoneCommand
	//	*ServerMessage_AddMdnsHostCommand
	//	*ServerMessage_RemoveMdnsHostCommand
	//	*ServerMessage_InitializeDeviceCommand
	//	*ServerMessage_UploadFileRequest
	//	*ServerMessage_SaveSettingsCommand
	//	*ServerMessage_AddWireguardInterface
	//	*ServerMessage_RemoveWireguardInterface
	//	*ServerMessage_SetStunServerCommand
	Message isServerMessage_Message `protobuf_oneof:"message"`
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{1}
}

func (m *ServerMessage) GetMessage() isServerMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *ServerMessage) GetHeartbeat() *Heartbeat {
	if x, ok := x.GetMessage().(*ServerMessage_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

func (x *ServerMessage) GetShutdown() *ShutdownCommand {
	if x, ok := x.GetMessage().(*ServerMessage_Shutdown); ok {
		return x.Shutdown
	}
	return nil
}

func (x *ServerMessage) GetRestart() *RestartCommand {
	if x, ok := x.GetMessage().(*ServerMessage_Restart); ok {
		return x.Restart
	}
	return nil
}

func (x *ServerMessage) GetRequestOsUpdateDiff() *RequestOSUpdateDiff {
	if x, ok := x.GetMessage().(*ServerMessage_RequestOsUpdateDiff); ok {
		return x.RequestOsUpdateDiff
	}
	return nil
}

func (x *ServerMessage) GetRequestCurrentDaemonVersion() *RequestCurrentDaemonVersion {
	if x, ok := x.GetMessage().(*ServerMessage_RequestCurrentDaemonVersion); ok {
		return x.RequestCurrentDaemonVersion
	}
	return nil
}

func (x *ServerMessage) GetChangeDaemonVersionCommand() *ChangeDaemonVersionCommand {
	if x, ok := x.GetMessage().(*ServerMessage_ChangeDaemonVersionCommand); ok {
		return x.ChangeDaemonVersionCommand
	}
	return nil
}

func (x *ServerMessage) GetInstallOsUpdateCommand() *InstallOSUpdateCommand {
	if x, ok := x.GetMessage().(*ServerMessage_InstallOsUpdateCommand); ok {
		return x.InstallOsUpdateCommand
	}
	return nil
}

func (x *ServerMessage) GetSetSystemImageCommand() *SetSystemImageCommand {
	if x, ok := x.GetMessage().(*ServerMessage_SetSystemImageCommand); ok {
		return x.SetSystemImageCommand
	}
	return nil
}

func (x *ServerMessage) GetSetUserPasswordCommand() *SetUserPasswordCommand {
	if x, ok := x.GetMessage().(*ServerMessage_SetUserPasswordCommand); ok {
		return x.SetUserPasswordCommand
	}
	return nil
}

func (x *ServerMessage) GetSetTimeZoneCommand() *SetTimeZoneCommand {
	if x, ok := x.GetMessage().(*ServerMessage_SetTimeZoneCommand); ok {
		return x.SetTimeZoneCommand
	}
	return nil
}

func (x *ServerMessage) GetAddMdnsHostCommand() *AddMdnsHostCommand {
	if x, ok := x.GetMessage().(*ServerMessage_AddMdnsHostCommand); ok {
		return x.AddMdnsHostCommand
	}
	return nil
}

func (x *ServerMessage) GetRemoveMdnsHostCommand() *RemoveMdnsHostCommand {
	if x, ok := x.GetMessage().(*ServerMessage_RemoveMdnsHostCommand); ok {
		return x.RemoveMdnsHostCommand
	}
	return nil
}

func (x *ServerMessage) GetInitializeDeviceCommand() *InitializeDeviceCommand {
	if x, ok := x.GetMessage().(*ServerMessage_InitializeDeviceCommand); ok {
		return x.InitializeDeviceCommand
	}
	return nil
}

func (x *ServerMessage) GetUploadFileRequest() *UploadFileRequest {
	if x, ok := x.GetMessage().(*ServerMessage_UploadFileRequest); ok {
		return x.UploadFileRequest
	}
	return nil
}

func (x *ServerMessage) GetSaveSettingsCommand() *SaveSettingsCommand {
	if x, ok := x.GetMessage().(*ServerMessage_SaveSettingsCommand); ok {
		return x.SaveSettingsCommand
	}
	return nil
}

func (x *ServerMessage) GetAddWireguardInterface() *AddWireguardInterface {
	if x, ok := x.GetMessage().(*ServerMessage_AddWireguardInterface); ok {
		return x.AddWireguardInterface
	}
	return nil
}

func (x *ServerMessage) GetRemoveWireguardInterface() *RemoveWireguardInterface {
	if x, ok := x.GetMessage().(*ServerMessage_RemoveWireguardInterface); ok {
		return x.RemoveWireguardInterface
	}
	return nil
}

func (x *ServerMessage) GetSetStunServerCommand() *SetSTUNServerCommand {
	if x, ok := x.GetMessage().(*ServerMessage_SetStunServerCommand); ok {
		return x.SetStunServerCommand
	}
	return nil
}

type isServerMessage_Message interface {
	isServerMessage_Message()
}

type ServerMessage_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,1,opt,name=heartbeat,proto3,oneof" bun:"heartbeat" csv:"heartbeat" json:"heartbeat" pg:"heartbeat" yaml:"heartbeat"`
}

type ServerMessage_Shutdown struct {
	Shutdown *ShutdownCommand `protobuf:"bytes,2,opt,name=shutdown,proto3,oneof" bun:"shutdown" csv:"shutdown" json:"shutdown" pg:"shutdown" yaml:"shutdown"`
}

type ServerMessage_Restart struct {
	Restart *RestartCommand `protobuf:"bytes,3,opt,name=restart,proto3,oneof" bun:"restart" csv:"restart" json:"restart" pg:"restart" yaml:"restart"`
}

type ServerMessage_RequestOsUpdateDiff struct {
	RequestOsUpdateDiff *RequestOSUpdateDiff `protobuf:"bytes,4,opt,name=request_os_update_diff,json=requestOsUpdateDiff,proto3,oneof" bun:"request_os_update_diff" csv:"request_os_update_diff" json:"request_os_update_diff" pg:"request_os_update_diff" yaml:"requestOsUpdateDiff"`
}

type ServerMessage_RequestCurrentDaemonVersion struct {
	RequestCurrentDaemonVersion *RequestCurrentDaemonVersion `protobuf:"bytes,5,opt,name=request_current_daemon_version,json=requestCurrentDaemonVersion,proto3,oneof" bun:"request_current_daemon_version" csv:"request_current_daemon_version" json:"request_current_daemon_version" pg:"request_current_daemon_version" yaml:"requestCurrentDaemonVersion"`
}

type ServerMessage_ChangeDaemonVersionCommand struct {
	ChangeDaemonVersionCommand *ChangeDaemonVersionCommand `protobuf:"bytes,6,opt,name=change_daemon_version_command,json=changeDaemonVersionCommand,proto3,oneof" bun:"change_daemon_version_command" csv:"change_daemon_version_command" json:"change_daemon_version_command" pg:"change_daemon_version_command" yaml:"changeDaemonVersionCommand"`
}

type ServerMessage_InstallOsUpdateCommand struct {
	InstallOsUpdateCommand *InstallOSUpdateCommand `protobuf:"bytes,7,opt,name=install_os_update_command,json=installOsUpdateCommand,proto3,oneof" bun:"install_os_update_command" csv:"install_os_update_command" json:"install_os_update_command" pg:"install_os_update_command" yaml:"installOsUpdateCommand"`
}

type ServerMessage_SetSystemImageCommand struct {
	SetSystemImageCommand *SetSystemImageCommand `protobuf:"bytes,8,opt,name=set_system_image_command,json=setSystemImageCommand,proto3,oneof" bun:"set_system_image_command" csv:"set_system_image_command" json:"set_system_image_command" pg:"set_system_image_command" yaml:"setSystemImageCommand"`
}

type ServerMessage_SetUserPasswordCommand struct {
	// Deprecated: use SaveSettingsCommand instead
	SetUserPasswordCommand *SetUserPasswordCommand `protobuf:"bytes,9,opt,name=set_user_password_command,json=setUserPasswordCommand,proto3,oneof" bun:"set_user_password_command" csv:"set_user_password_command" json:"set_user_password_command" pg:"set_user_password_command" yaml:"setUserPasswordCommand"`
}

type ServerMessage_SetTimeZoneCommand struct {
	// Deprecated: use SaveSettingsCommand instead
	SetTimeZoneCommand *SetTimeZoneCommand `protobuf:"bytes,10,opt,name=set_time_zone_command,json=setTimeZoneCommand,proto3,oneof" bun:"set_time_zone_command" csv:"set_time_zone_command" json:"set_time_zone_command" pg:"set_time_zone_command" yaml:"setTimeZoneCommand"`
}

type ServerMessage_AddMdnsHostCommand struct {
	AddMdnsHostCommand *AddMdnsHostCommand `protobuf:"bytes,11,opt,name=add_mdns_host_command,json=addMdnsHostCommand,proto3,oneof" bun:"add_mdns_host_command" csv:"add_mdns_host_command" json:"add_mdns_host_command" pg:"add_mdns_host_command" yaml:"addMdnsHostCommand"`
}

type ServerMessage_RemoveMdnsHostCommand struct {
	RemoveMdnsHostCommand *RemoveMdnsHostCommand `protobuf:"bytes,12,opt,name=remove_mdns_host_command,json=removeMdnsHostCommand,proto3,oneof" bun:"remove_mdns_host_command" csv:"remove_mdns_host_command" json:"remove_mdns_host_command" pg:"remove_mdns_host_command" yaml:"removeMdnsHostCommand"`
}

type ServerMessage_InitializeDeviceCommand struct {
	// Deprecated: use SaveSettingsCommand instead
	InitializeDeviceCommand *InitializeDeviceCommand `protobuf:"bytes,13,opt,name=initialize_device_command,json=initializeDeviceCommand,proto3,oneof" bun:"initialize_device_command" csv:"initialize_device_command" json:"initialize_device_command" pg:"initialize_device_command" yaml:"initializeDeviceCommand"`
}

type ServerMessage_UploadFileRequest struct {
	UploadFileRequest *UploadFileRequest `protobuf:"bytes,14,opt,name=upload_file_request,json=uploadFileRequest,proto3,oneof" bun:"upload_file_request" csv:"upload_file_request" json:"upload_file_request" pg:"upload_file_request" yaml:"uploadFileRequest"`
}

type ServerMessage_SaveSettingsCommand struct {
	SaveSettingsCommand *SaveSettingsCommand `protobuf:"bytes,15,opt,name=save_settings_command,json=saveSettingsCommand,proto3,oneof" bun:"save_settings_command" csv:"save_settings_command" json:"save_settings_command" pg:"save_settings_command" yaml:"saveSettingsCommand"`
}

type ServerMessage_AddWireguardInterface struct {
	AddWireguardInterface *AddWireguardInterface `protobuf:"bytes,16,opt,name=add_wireguard_interface,json=addWireguardInterface,proto3,oneof" bun:"add_wireguard_interface" csv:"add_wireguard_interface" json:"add_wireguard_interface" pg:"add_wireguard_interface" yaml:"addWireguardInterface"`
}

type ServerMessage_RemoveWireguardInterface struct {
	RemoveWireguardInterface *RemoveWireguardInterface `protobuf:"bytes,17,opt,name=remove_wireguard_interface,json=removeWireguardInterface,proto3,oneof" bun:"remove_wireguard_interface" csv:"remove_wireguard_interface" json:"remove_wireguard_interface" pg:"remove_wireguard_interface" yaml:"removeWireguardInterface"`
}

type ServerMessage_SetStunServerCommand struct {
	SetStunServerCommand *SetSTUNServerCommand `protobuf:"bytes,18,opt,name=set_stun_server_command,json=setStunServerCommand,proto3,oneof" bun:"set_stun_server_command" csv:"set_stun_server_command" json:"set_stun_server_command" pg:"set_stun_server_command" yaml:"setStunServerCommand"`
}

func (*ServerMessage_Heartbeat) isServerMessage_Message() {}

func (*ServerMessage_Shutdown) isServerMessage_Message() {}

func (*ServerMessage_Restart) isServerMessage_Message() {}

func (*ServerMessage_RequestOsUpdateDiff) isServerMessage_Message() {}

func (*ServerMessage_RequestCurrentDaemonVersion) isServerMessage_Message() {}

func (*ServerMessage_ChangeDaemonVersionCommand) isServerMessage_Message() {}

func (*ServerMessage_InstallOsUpdateCommand) isServerMessage_Message() {}

func (*ServerMessage_SetSystemImageCommand) isServerMessage_Message() {}

func (*ServerMessage_SetUserPasswordCommand) isServerMessage_Message() {}

func (*ServerMessage_SetTimeZoneCommand) isServerMessage_Message() {}

func (*ServerMessage_AddMdnsHostCommand) isServerMessage_Message() {}

func (*ServerMessage_RemoveMdnsHostCommand) isServerMessage_Message() {}

func (*ServerMessage_InitializeDeviceCommand) isServerMessage_Message() {}

func (*ServerMessage_UploadFileRequest) isServerMessage_Message() {}

func (*ServerMessage_SaveSettingsCommand) isServerMessage_Message() {}

func (*ServerMessage_AddWireguardInterface) isServerMessage_Message() {}

func (*ServerMessage_RemoveWireguardInterface) isServerMessage_Message() {}

func (*ServerMessage_SetStunServerCommand) isServerMessage_Message() {}

type Heartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{2}
}

// ShutdownAlert notifies the Server that the host is about to shutdown
type ShutdownAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShutdownAlert) Reset() {
	*x = ShutdownAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownAlert) ProtoMessage() {}

func (x *ShutdownAlert) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownAlert.ProtoReflect.Descriptor instead.
func (*ShutdownAlert) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{3}
}

// OSUpdateDiff is the result of the `nvd diff` command
type OSUpdateDiff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string       `protobuf:"bytes,1,opt,name=description,proto3" json:"description" bun:"description" csv:"description" pg:"description" yaml:"description"`
	Error       *DaemonError `protobuf:"bytes,16,opt,name=error,proto3" json:"error" bun:"error" csv:"error" pg:"error" yaml:"error"`
}

func (x *OSUpdateDiff) Reset() {
	*x = OSUpdateDiff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OSUpdateDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSUpdateDiff) ProtoMessage() {}

func (x *OSUpdateDiff) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSUpdateDiff.ProtoReflect.Descriptor instead.
func (*OSUpdateDiff) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{4}
}

func (x *OSUpdateDiff) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OSUpdateDiff) GetError() *DaemonError {
	if x != nil {
		return x.Error
	}
	return nil
}

// CurrentDaemonVersion is the current daemon version
type CurrentDaemonVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version    string       `protobuf:"bytes,1,opt,name=version,proto3" json:"version" bun:"version" csv:"version" pg:"version" yaml:"version"`
	VendorHash string       `protobuf:"bytes,2,opt,name=vendor_hash,json=vendorHash,proto3" json:"vendor_hash" bun:"vendor_hash" csv:"vendor_hash" pg:"vendor_hash" yaml:"vendorHash"`
	SrcHash    string       `protobuf:"bytes,3,opt,name=src_hash,json=srcHash,proto3" json:"src_hash" bun:"src_hash" csv:"src_hash" pg:"src_hash" yaml:"srcHash"`
	Error      *DaemonError `protobuf:"bytes,16,opt,name=error,proto3" json:"error" bun:"error" csv:"error" pg:"error" yaml:"error"`
}

func (x *CurrentDaemonVersion) Reset() {
	*x = CurrentDaemonVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentDaemonVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentDaemonVersion) ProtoMessage() {}

func (x *CurrentDaemonVersion) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentDaemonVersion.ProtoReflect.Descriptor instead.
func (*CurrentDaemonVersion) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{5}
}

func (x *CurrentDaemonVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CurrentDaemonVersion) GetVendorHash() string {
	if x != nil {
		return x.VendorHash
	}
	return ""
}

func (x *CurrentDaemonVersion) GetSrcHash() string {
	if x != nil {
		return x.SrcHash
	}
	return ""
}

func (x *CurrentDaemonVersion) GetError() *DaemonError {
	if x != nil {
		return x.Error
	}
	return nil
}

// Deprecated: use SettingsSaved instead
type DeviceInitialized struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *DaemonError `protobuf:"bytes,16,opt,name=error,proto3" json:"error" bun:"error" csv:"error" pg:"error" yaml:"error"`
}

func (x *DeviceInitialized) Reset() {
	*x = DeviceInitialized{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInitialized) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInitialized) ProtoMessage() {}

func (x *DeviceInitialized) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInitialized.ProtoReflect.Descriptor instead.
func (*DeviceInitialized) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{6}
}

func (x *DeviceInitialized) GetError() *DaemonError {
	if x != nil {
		return x.Error
	}
	return nil
}

type DaemonError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error" bun:"error" csv:"error" pg:"error" yaml:"error"`
}

func (x *DaemonError) Reset() {
	*x = DaemonError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaemonError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaemonError) ProtoMessage() {}

func (x *DaemonError) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaemonError.ProtoReflect.Descriptor instead.
func (*DaemonError) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{7}
}

func (x *DaemonError) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// UploadFileReady tells the server that the daemon is ready to start receiving file data chunks
type UploadFileReady struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" bun:"id" csv:"id" pg:"id" yaml:"id"`
}

func (x *UploadFileReady) Reset() {
	*x = UploadFileReady{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileReady) ProtoMessage() {}

func (x *UploadFileReady) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileReady.ProtoReflect.Descriptor instead.
func (*UploadFileReady) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{8}
}

func (x *UploadFileReady) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// UploadFileChunkCompleted tells the server that the daemon is ready for another chunk of data during a file upload
type UploadFileChunkCompleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId string `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id" bun:"file_id" csv:"file_id" pg:"file_id" yaml:"fileId"`
	Index  uint32 `protobuf:"varint,2,opt,name=index,proto3" json:"index" bun:"index" csv:"index" pg:"index" yaml:"index"`
}

func (x *UploadFileChunkCompleted) Reset() {
	*x = UploadFileChunkCompleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileChunkCompleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileChunkCompleted) ProtoMessage() {}

func (x *UploadFileChunkCompleted) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileChunkCompleted.ProtoReflect.Descriptor instead.
func (*UploadFileChunkCompleted) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{9}
}

func (x *UploadFileChunkCompleted) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *UploadFileChunkCompleted) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type SettingsSaved struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *DaemonError `protobuf:"bytes,16,opt,name=error,proto3" json:"error" bun:"error" csv:"error" pg:"error" yaml:"error"`
}

func (x *SettingsSaved) Reset() {
	*x = SettingsSaved{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettingsSaved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsSaved) ProtoMessage() {}

func (x *SettingsSaved) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsSaved.ProtoReflect.Descriptor instead.
func (*SettingsSaved) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{10}
}

func (x *SettingsSaved) GetError() *DaemonError {
	if x != nil {
		return x.Error
	}
	return nil
}

type WireguardInterfaceAdded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *DaemonError `protobuf:"bytes,16,opt,name=error,proto3" json:"error" bun:"error" csv:"error" pg:"error" yaml:"error"`
}

func (x *WireguardInterfaceAdded) Reset() {
	*x = WireguardInterfaceAdded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WireguardInterfaceAdded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WireguardInterfaceAdded) ProtoMessage() {}

func (x *WireguardInterfaceAdded) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WireguardInterfaceAdded.ProtoReflect.Descriptor instead.
func (*WireguardInterfaceAdded) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{11}
}

func (x *WireguardInterfaceAdded) GetError() *DaemonError {
	if x != nil {
		return x.Error
	}
	return nil
}

type WireguardInterfaceRemoved struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *DaemonError `protobuf:"bytes,16,opt,name=error,proto3" json:"error" bun:"error" csv:"error" pg:"error" yaml:"error"`
}

func (x *WireguardInterfaceRemoved) Reset() {
	*x = WireguardInterfaceRemoved{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WireguardInterfaceRemoved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WireguardInterfaceRemoved) ProtoMessage() {}

func (x *WireguardInterfaceRemoved) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WireguardInterfaceRemoved.ProtoReflect.Descriptor instead.
func (*WireguardInterfaceRemoved) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{12}
}

func (x *WireguardInterfaceRemoved) GetError() *DaemonError {
	if x != nil {
		return x.Error
	}
	return nil
}

type STUNAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address" bun:"address" csv:"address" pg:"address" yaml:"address"`
	Port    uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port" bun:"port" csv:"port" pg:"port" yaml:"port"`
}

func (x *STUNAddress) Reset() {
	*x = STUNAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *STUNAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*STUNAddress) ProtoMessage() {}

func (x *STUNAddress) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use STUNAddress.ProtoReflect.Descriptor instead.
func (*STUNAddress) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{13}
}

func (x *STUNAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *STUNAddress) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

// ShutdownCommand tells the daemon to shutdown the host
type ShutdownCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShutdownCommand) Reset() {
	*x = ShutdownCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownCommand) ProtoMessage() {}

func (x *ShutdownCommand) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownCommand.ProtoReflect.Descriptor instead.
func (*ShutdownCommand) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{14}
}

// RestartCommand tells the daemon to restart the host
type RestartCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RestartCommand) Reset() {
	*x = RestartCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartCommand) ProtoMessage() {}

func (x *RestartCommand) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartCommand.ProtoReflect.Descriptor instead.
func (*RestartCommand) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{15}
}

// RequestOSUpdateDiff tells the daemon to check for updates to the host and send the result to the server
type RequestOSUpdateDiff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestOSUpdateDiff) Reset() {
	*x = RequestOSUpdateDiff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestOSUpdateDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestOSUpdateDiff) ProtoMessage() {}

func (x *RequestOSUpdateDiff) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestOSUpdateDiff.ProtoReflect.Descriptor instead.
func (*RequestOSUpdateDiff) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{16}
}

// RequestCurrentDaemonVersion tells the daemon to check the current daemon version and send it to the server
type RequestCurrentDaemonVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestCurrentDaemonVersion) Reset() {
	*x = RequestCurrentDaemonVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestCurrentDaemonVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCurrentDaemonVersion) ProtoMessage() {}

func (x *RequestCurrentDaemonVersion) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCurrentDaemonVersion.ProtoReflect.Descriptor instead.
func (*RequestCurrentDaemonVersion) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{17}
}

type ChangeDaemonVersionCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version    string `protobuf:"bytes,1,opt,name=version,proto3" json:"version" bun:"version" csv:"version" pg:"version" yaml:"version"`
	VendorHash string `protobuf:"bytes,2,opt,name=vendor_hash,json=vendorHash,proto3" json:"vendor_hash" bun:"vendor_hash" csv:"vendor_hash" pg:"vendor_hash" yaml:"vendorHash"`
	SrcHash    string `protobuf:"bytes,3,opt,name=src_hash,json=srcHash,proto3" json:"src_hash" bun:"src_hash" csv:"src_hash" pg:"src_hash" yaml:"srcHash"`
}

func (x *ChangeDaemonVersionCommand) Reset() {
	*x = ChangeDaemonVersionCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeDaemonVersionCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeDaemonVersionCommand) ProtoMessage() {}

func (x *ChangeDaemonVersionCommand) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeDaemonVersionCommand.ProtoReflect.Descriptor instead.
func (*ChangeDaemonVersionCommand) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{18}
}

func (x *ChangeDaemonVersionCommand) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ChangeDaemonVersionCommand) GetVendorHash() string {
	if x != nil {
		return x.VendorHash
	}
	return ""
}

func (x *ChangeDaemonVersionCommand) GetSrcHash() string {
	if x != nil {
		return x.SrcHash
	}
	return ""
}

type InstallOSUpdateCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InstallOSUpdateCommand) Reset() {
	*x = InstallOSUpdateCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallOSUpdateCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallOSUpdateCommand) ProtoMessage() {}

func (x *InstallOSUpdateCommand) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallOSUpdateCommand.ProtoReflect.Descriptor instead.
func (*InstallOSUpdateCommand) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{19}
}

type SetSystemImageCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentImage   string `protobuf:"bytes,1,opt,name=current_image,json=currentImage,proto3" json:"current_image" bun:"current_image" csv:"current_image" pg:"current_image" yaml:"currentImage"`
	RequestedImage string `protobuf:"bytes,2,opt,name=requested_image,json=requestedImage,proto3" json:"requested_image" bun:"requested_image" csv:"requested_image" pg:"requested_image" yaml:"requestedImage"`
}

func (x *SetSystemImageCommand) Reset() {
	*x = SetSystemImageCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSystemImageCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSystemImageCommand) ProtoMessage() {}

func (x *SetSystemImageCommand) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSystemImageCommand.ProtoReflect.Descriptor instead.
func (*SetSystemImageCommand) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{20}
}

func (x *SetSystemImageCommand) GetCurrentImage() string {
	if x != nil {
		return x.CurrentImage
	}
	return ""
}

func (x *SetSystemImageCommand) GetRequestedImage() string {
	if x != nil {
		return x.RequestedImage
	}
	return ""
}

// Deprecated: use SaveSettingsCommand instead
type InitializeDeviceCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     *SetUserPasswordCommand `protobuf:"bytes,1,opt,name=user,proto3" json:"user" bun:"user" csv:"user" pg:"user" yaml:"user"`
	TimeZone *SetTimeZoneCommand     `protobuf:"bytes,2,opt,name=time_zone,json=timeZone,proto3" json:"time_zone" bun:"time_zone" csv:"time_zone" pg:"time_zone" yaml:"timeZone"`
}

func (x *InitializeDeviceCommand) Reset() {
	*x = InitializeDeviceCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializeDeviceCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeDeviceCommand) ProtoMessage() {}

func (x *InitializeDeviceCommand) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeDeviceCommand.ProtoReflect.Descriptor instead.
func (*InitializeDeviceCommand) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{21}
}

func (x *InitializeDeviceCommand) GetUser() *SetUserPasswordCommand {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *InitializeDeviceCommand) GetTimeZone() *SetTimeZoneCommand {
	if x != nil {
		return x.TimeZone
	}
	return nil
}

// Deprecated: use SaveSettingsCommand instead
type SetUserPasswordCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username" bun:"username" csv:"username" pg:"username" yaml:"username"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password" bun:"password" csv:"password" pg:"password" yaml:"password"`
}

func (x *SetUserPasswordCommand) Reset() {
	*x = SetUserPasswordCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserPasswordCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserPasswordCommand) ProtoMessage() {}

func (x *SetUserPasswordCommand) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserPasswordCommand.ProtoReflect.Descriptor instead.
func (*SetUserPasswordCommand) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{22}
}

func (x *SetUserPasswordCommand) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SetUserPasswordCommand) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// Deprecated: use SaveSettingsCommand instead
type SetTimeZoneCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// time_zone must be a valid TZ identifier from: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
	TimeZone string `protobuf:"bytes,1,opt,name=time_zone,json=timeZone,proto3" json:"time_zone" bun:"time_zone" csv:"time_zone" pg:"time_zone" yaml:"timeZone"`
}

func (x *SetTimeZoneCommand) Reset() {
	*x = SetTimeZoneCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTimeZoneCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTimeZoneCommand) ProtoMessage() {}

func (x *SetTimeZoneCommand) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTimeZoneCommand.ProtoReflect.Descriptor instead.
func (*SetTimeZoneCommand) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{23}
}

func (x *SetTimeZoneCommand) GetTimeZone() string {
	if x != nil {
		return x.TimeZone
	}
	return ""
}

type AddMdnsHostCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname" bun:"hostname" csv:"hostname" pg:"hostname" yaml:"hostname"`
}

func (x *AddMdnsHostCommand) Reset() {
	*x = AddMdnsHostCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMdnsHostCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMdnsHostCommand) ProtoMessage() {}

func (x *AddMdnsHostCommand) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMdnsHostCommand.ProtoReflect.Descriptor instead.
func (*AddMdnsHostCommand) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{24}
}

func (x *AddMdnsHostCommand) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type RemoveMdnsHostCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname" bun:"hostname" csv:"hostname" pg:"hostname" yaml:"hostname"`
}

func (x *RemoveMdnsHostCommand) Reset() {
	*x = RemoveMdnsHostCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMdnsHostCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMdnsHostCommand) ProtoMessage() {}

func (x *RemoveMdnsHostCommand) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMdnsHostCommand.ProtoReflect.Descriptor instead.
func (*RemoveMdnsHostCommand) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{25}
}

func (x *RemoveMdnsHostCommand) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

// UploadFileRequest tells the daemon that the server would like to initiate a file upload
type UploadFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*UploadFileRequest_Info
	//	*UploadFileRequest_Chunk
	//	*UploadFileRequest_Done
	Data isUploadFileRequest_Data `protobuf_oneof:"data"`
}

func (x *UploadFileRequest) Reset() {
	*x = UploadFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileRequest) ProtoMessage() {}

func (x *UploadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileRequest.ProtoReflect.Descriptor instead.
func (*UploadFileRequest) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{26}
}

func (m *UploadFileRequest) GetData() isUploadFileRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *UploadFileRequest) GetInfo() *FileInfo {
	if x, ok := x.GetData().(*UploadFileRequest_Info); ok {
		return x.Info
	}
	return nil
}

func (x *UploadFileRequest) GetChunk() *FileChunk {
	if x, ok := x.GetData().(*UploadFileRequest_Chunk); ok {
		return x.Chunk
	}
	return nil
}

func (x *UploadFileRequest) GetDone() *FileDone {
	if x, ok := x.GetData().(*UploadFileRequest_Done); ok {
		return x.Done
	}
	return nil
}

type isUploadFileRequest_Data interface {
	isUploadFileRequest_Data()
}

type UploadFileRequest_Info struct {
	Info *FileInfo `protobuf:"bytes,1,opt,name=info,proto3,oneof" bun:"info" csv:"info" json:"info" pg:"info" yaml:"info"`
}

type UploadFileRequest_Chunk struct {
	Chunk *FileChunk `protobuf:"bytes,2,opt,name=chunk,proto3,oneof" bun:"chunk" csv:"chunk" json:"chunk" pg:"chunk" yaml:"chunk"`
}

type UploadFileRequest_Done struct {
	Done *FileDone `protobuf:"bytes,3,opt,name=done,proto3,oneof" bun:"done" csv:"done" json:"done" pg:"done" yaml:"done"`
}

func (*UploadFileRequest_Info) isUploadFileRequest_Data() {}

func (*UploadFileRequest_Chunk) isUploadFileRequest_Data() {}

func (*UploadFileRequest_Done) isUploadFileRequest_Data() {}

// FileInfo defines the metadata information about a file to be uploaded
type FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId   string `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id" bun:"file_id" csv:"file_id" pg:"file_id" yaml:"fileId"`
	FilePath string `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path" bun:"file_path" csv:"file_path" pg:"file_path" yaml:"filePath"`
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{27}
}

func (x *FileInfo) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FileInfo) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

// FileChunk defines a chunk of data passed to the daemon during a file upload
type FileChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId string `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id" bun:"file_id" csv:"file_id" pg:"file_id" yaml:"fileId"`
	Index  uint32 `protobuf:"varint,2,opt,name=index,proto3" json:"index" bun:"index" csv:"index" pg:"index" yaml:"index"`
	Data   []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data" bun:"data" csv:"data" pg:"data" yaml:"data"`
}

func (x *FileChunk) Reset() {
	*x = FileChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunk) ProtoMessage() {}

func (x *FileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunk.ProtoReflect.Descriptor instead.
func (*FileChunk) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{28}
}

func (x *FileChunk) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FileChunk) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *FileChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// FileDone tells the daemon that the last file data chunk has been uploaded and the daemon can assemble the final file
type FileDone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId     string `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id" bun:"file_id" csv:"file_id" pg:"file_id" yaml:"fileId"`
	ChunkCount uint32 `protobuf:"varint,2,opt,name=chunk_count,json=chunkCount,proto3" json:"chunk_count" bun:"chunk_count" csv:"chunk_count" pg:"chunk_count" yaml:"chunkCount"`
	FilePath   string `protobuf:"bytes,3,opt,name=file_path,json=filePath,proto3" json:"file_path" bun:"file_path" csv:"file_path" pg:"file_path" yaml:"filePath"`
}

func (x *FileDone) Reset() {
	*x = FileDone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDone) ProtoMessage() {}

func (x *FileDone) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDone.ProtoReflect.Descriptor instead.
func (*FileDone) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{29}
}

func (x *FileDone) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FileDone) GetChunkCount() uint32 {
	if x != nil {
		return x.ChunkCount
	}
	return 0
}

func (x *FileDone) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type SaveSettingsCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminPassword string `protobuf:"bytes,1,opt,name=admin_password,json=adminPassword,proto3" json:"admin_password" bun:"admin_password" csv:"admin_password" pg:"admin_password" yaml:"adminPassword"`
	// time_zone must be a valid TZ identifier from: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
	TimeZone       string   `protobuf:"bytes,2,opt,name=time_zone,json=timeZone,proto3" json:"time_zone" bun:"time_zone" csv:"time_zone" pg:"time_zone" yaml:"timeZone"`
	EnableSsh      bool     `protobuf:"varint,3,opt,name=enable_ssh,json=enableSsh,proto3" json:"enable_ssh" bun:"enable_ssh" csv:"enable_ssh" pg:"enable_ssh" yaml:"enableSsh"`
	TrustedSshKeys []string `protobuf:"bytes,4,rep,name=trusted_ssh_keys,json=trustedSshKeys,proto3" json:"trusted_ssh_keys" bun:"trusted_ssh_keys" csv:"trusted_ssh_keys" pg:"trusted_ssh_keys" yaml:"trustedSshKeys"`
}

func (x *SaveSettingsCommand) Reset() {
	*x = SaveSettingsCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveSettingsCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveSettingsCommand) ProtoMessage() {}

func (x *SaveSettingsCommand) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveSettingsCommand.ProtoReflect.Descriptor instead.
func (*SaveSettingsCommand) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{30}
}

func (x *SaveSettingsCommand) GetAdminPassword() string {
	if x != nil {
		return x.AdminPassword
	}
	return ""
}

func (x *SaveSettingsCommand) GetTimeZone() string {
	if x != nil {
		return x.TimeZone
	}
	return ""
}

func (x *SaveSettingsCommand) GetEnableSsh() bool {
	if x != nil {
		return x.EnableSsh
	}
	return false
}

func (x *SaveSettingsCommand) GetTrustedSshKeys() []string {
	if x != nil {
		return x.TrustedSshKeys
	}
	return nil
}

type AddWireguardInterface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interface *WireguardInterface `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface" bun:"interface" csv:"interface" pg:"interface" yaml:"interface"`
}

func (x *AddWireguardInterface) Reset() {
	*x = AddWireguardInterface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWireguardInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWireguardInterface) ProtoMessage() {}

func (x *AddWireguardInterface) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWireguardInterface.ProtoReflect.Descriptor instead.
func (*AddWireguardInterface) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{31}
}

func (x *AddWireguardInterface) GetInterface() *WireguardInterface {
	if x != nil {
		return x.Interface
	}
	return nil
}

type RemoveWireguardInterface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" bun:"name" csv:"name" pg:"name" yaml:"name"`
}

func (x *RemoveWireguardInterface) Reset() {
	*x = RemoveWireguardInterface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveWireguardInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveWireguardInterface) ProtoMessage() {}

func (x *RemoveWireguardInterface) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveWireguardInterface.ProtoReflect.Descriptor instead.
func (*RemoveWireguardInterface) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{32}
}

func (x *RemoveWireguardInterface) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SetSTUNServerCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server string `protobuf:"bytes,1,opt,name=server,proto3" json:"server" bun:"server" csv:"server" pg:"server" yaml:"server"`
}

func (x *SetSTUNServerCommand) Reset() {
	*x = SetSTUNServerCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_daemon_v1_stream_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSTUNServerCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSTUNServerCommand) ProtoMessage() {}

func (x *SetSTUNServerCommand) ProtoReflect() protoreflect.Message {
	mi := &file_platform_daemon_v1_stream_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSTUNServerCommand.ProtoReflect.Descriptor instead.
func (*SetSTUNServerCommand) Descriptor() ([]byte, []int) {
	return file_platform_daemon_v1_stream_proto_rawDescGZIP(), []int{33}
}

func (x *SetSTUNServerCommand) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

var File_platform_daemon_v1_stream_proto protoreflect.FileDescriptor

var file_platform_daemon_v1_stream_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x12, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f,
	0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x69, 0x72, 0x65, 0x67,
	0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9f, 0x08, 0x0a, 0x0d, 0x44,
	0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x09,
	0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x48, 0x00,
	0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x4a, 0x0a, 0x0e, 0x73,
	0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64,
	0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77,
	0x6e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f,
	0x77, 0x6e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x48, 0x0a, 0x0e, 0x6f, 0x73, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x53, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x66,
	0x66, 0x48, 0x00, 0x52, 0x0c, 0x6f, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x66,
	0x66, 0x12, 0x60, 0x0a, 0x16, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x65, 0x6d, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x14, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x56, 0x0a, 0x12, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x48, 0x00, 0x52, 0x11,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x12, 0x51, 0x0a, 0x11, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64,
	0x79, 0x48, 0x00, 0x52, 0x0f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x12, 0x6d, 0x0a, 0x1b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x18, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x4a, 0x0a, 0x0e, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f,
	0x73, 0x61, 0x76, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x61, 0x76, 0x65, 0x64, 0x48, 0x00,
	0x52, 0x0d, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x61, 0x76, 0x65, 0x64, 0x12,
	0x69, 0x0a, 0x19, 0x77, 0x69, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61,
	0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x64, 0x64, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x17, 0x77, 0x69, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x6f, 0x0a, 0x1b, 0x77, 0x69,
	0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x48, 0x00,
	0x52, 0x19, 0x77, 0x69, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x0c, 0x73,
	0x74, 0x75, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x54, 0x55, 0x4e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xda, 0x0d, 0x0a,
	0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d,
	0x0a, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x48, 0x00, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x41, 0x0a,
	0x08, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x08, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e,
	0x12, 0x3e, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x5e, 0x0a, 0x16, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x73, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x53, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x66, 0x66, 0x48, 0x00, 0x52, 0x13, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4f, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x66, 0x66,
	0x12, 0x76, 0x0a, 0x1e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x65, 0x6d,
	0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x1b, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x73, 0x0a, 0x1d, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48,
	0x00, 0x52, 0x1a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x67, 0x0a,
	0x19, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x6f, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4f, 0x53, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x16,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4f, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x64, 0x0a, 0x18, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x15, 0x73, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x67, 0x0a, 0x19,
	0x73, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x16, 0x73,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x5b, 0x0a, 0x15, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x12,
	0x73, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x5b, 0x0a, 0x15, 0x61, 0x64, 0x64, 0x5f, 0x6d, 0x64, 0x6e, 0x73, 0x5f, 0x68,
	0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x64, 0x6e, 0x73, 0x48, 0x6f,
	0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x12, 0x61, 0x64, 0x64,
	0x4d, 0x64, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x64, 0x0a, 0x18, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x6d, 0x64, 0x6e, 0x73, 0x5f, 0x68,
	0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x64, 0x6e,
	0x73, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x15,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x64, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x69, 0x0a, 0x19, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x17, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x57, 0x0a, 0x13, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x15, 0x73, 0x61, 0x76,
	0x65, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61,
	0x76, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x48, 0x00, 0x52, 0x13, 0x73, 0x61, 0x76, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x63, 0x0a, 0x17, 0x61, 0x64, 0x64, 0x5f,
	0x77, 0x69, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x64, 0x57, 0x69, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x48, 0x00, 0x52, 0x15, 0x61, 0x64, 0x64, 0x57, 0x69, 0x72, 0x65, 0x67,
	0x75, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x6c, 0x0a,
	0x1a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x77, 0x69, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57, 0x69, 0x72,
	0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x48,
	0x00, 0x52, 0x18, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57, 0x69, 0x72, 0x65, 0x67, 0x75, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x17, 0x73,
	0x65, 0x74, 0x5f, 0x73, 0x74, 0x75, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x54, 0x55, 0x4e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x14, 0x73, 0x65, 0x74, 0x53, 0x74, 0x75,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x09,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x0b, 0x0a, 0x09, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f,
	0x77, 0x6e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x22, 0x67, 0x0a, 0x0c, 0x4f, 0x53, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x69, 0x66, 0x66, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61,
	0x65, 0x6d, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0xa3, 0x01, 0x0a, 0x14, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x65, 0x6d,
	0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x72, 0x63, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x35, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4a, 0x0a, 0x11, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x23, 0x0a, 0x0b, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x21, 0x0a, 0x0f, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x49, 0x0a, 0x18, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x46, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x53, 0x61, 0x76, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x50, 0x0a,
	0x17, 0x57, 0x69, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x52, 0x0a, 0x19, 0x57, 0x69, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x3b, 0x0a, 0x0b, 0x53, 0x54, 0x55, 0x4e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x22, 0x11, 0x0a, 0x0f, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4f, 0x53, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x66, 0x66, 0x22, 0x1d, 0x0a, 0x1b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x65, 0x6d, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x72, 0x0a, 0x1a, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x72, 0x63, 0x48, 0x61, 0x73, 0x68, 0x22,
	0x18, 0x0a, 0x16, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4f, 0x53, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x65, 0x0a, 0x15, 0x53, 0x65, 0x74,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x22, 0x9e, 0x01, 0x0a, 0x17, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x3e, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e,
	0x65, 0x22, 0x50, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x22, 0x31, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f,
	0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x22, 0x30, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x4d, 0x64, 0x6e,
	0x73, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x4d, 0x64, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xba, 0x01,
	0x0a, 0x11, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48,
	0x00, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x48, 0x00, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x32,
	0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x04, 0x64, 0x6f,
	0x6e, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x40, 0x0a, 0x08, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x4e, 0x0a, 0x09,
	0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x61, 0x0a, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22,
	0xa2, 0x01, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x73, 0x68, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x72,
	0x75, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x73, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x53, 0x73, 0x68,
	0x4b, 0x65, 0x79, 0x73, 0x22, 0x5d, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x57, 0x69, 0x72, 0x65, 0x67,
	0x75, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x44, 0x0a,
	0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x22, 0x2e, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57, 0x69, 0x72,
	0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x53, 0x54, 0x55, 0x4e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x32, 0x70, 0x0a, 0x13, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x0b, 0x43, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x21, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x6f, 0x6d, 0x65, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x69,
	0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_platform_daemon_v1_stream_proto_rawDescOnce sync.Once
	file_platform_daemon_v1_stream_proto_rawDescData = file_platform_daemon_v1_stream_proto_rawDesc
)

func file_platform_daemon_v1_stream_proto_rawDescGZIP() []byte {
	file_platform_daemon_v1_stream_proto_rawDescOnce.Do(func() {
		file_platform_daemon_v1_stream_proto_rawDescData = protoimpl.X.CompressGZIP(file_platform_daemon_v1_stream_proto_rawDescData)
	})
	return file_platform_daemon_v1_stream_proto_rawDescData
}

var file_platform_daemon_v1_stream_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_platform_daemon_v1_stream_proto_goTypes = []any{
	(*DaemonMessage)(nil),               // 0: platform.daemon.v1.DaemonMessage
	(*ServerMessage)(nil),               // 1: platform.daemon.v1.ServerMessage
	(*Heartbeat)(nil),                   // 2: platform.daemon.v1.Heartbeat
	(*ShutdownAlert)(nil),               // 3: platform.daemon.v1.ShutdownAlert
	(*OSUpdateDiff)(nil),                // 4: platform.daemon.v1.OSUpdateDiff
	(*CurrentDaemonVersion)(nil),        // 5: platform.daemon.v1.CurrentDaemonVersion
	(*DeviceInitialized)(nil),           // 6: platform.daemon.v1.DeviceInitialized
	(*DaemonError)(nil),                 // 7: platform.daemon.v1.DaemonError
	(*UploadFileReady)(nil),             // 8: platform.daemon.v1.UploadFileReady
	(*UploadFileChunkCompleted)(nil),    // 9: platform.daemon.v1.UploadFileChunkCompleted
	(*SettingsSaved)(nil),               // 10: platform.daemon.v1.SettingsSaved
	(*WireguardInterfaceAdded)(nil),     // 11: platform.daemon.v1.WireguardInterfaceAdded
	(*WireguardInterfaceRemoved)(nil),   // 12: platform.daemon.v1.WireguardInterfaceRemoved
	(*STUNAddress)(nil),                 // 13: platform.daemon.v1.STUNAddress
	(*ShutdownCommand)(nil),             // 14: platform.daemon.v1.ShutdownCommand
	(*RestartCommand)(nil),              // 15: platform.daemon.v1.RestartCommand
	(*RequestOSUpdateDiff)(nil),         // 16: platform.daemon.v1.RequestOSUpdateDiff
	(*RequestCurrentDaemonVersion)(nil), // 17: platform.daemon.v1.RequestCurrentDaemonVersion
	(*ChangeDaemonVersionCommand)(nil),  // 18: platform.daemon.v1.ChangeDaemonVersionCommand
	(*InstallOSUpdateCommand)(nil),      // 19: platform.daemon.v1.InstallOSUpdateCommand
	(*SetSystemImageCommand)(nil),       // 20: platform.daemon.v1.SetSystemImageCommand
	(*InitializeDeviceCommand)(nil),     // 21: platform.daemon.v1.InitializeDeviceCommand
	(*SetUserPasswordCommand)(nil),      // 22: platform.daemon.v1.SetUserPasswordCommand
	(*SetTimeZoneCommand)(nil),          // 23: platform.daemon.v1.SetTimeZoneCommand
	(*AddMdnsHostCommand)(nil),          // 24: platform.daemon.v1.AddMdnsHostCommand
	(*RemoveMdnsHostCommand)(nil),       // 25: platform.daemon.v1.RemoveMdnsHostCommand
	(*UploadFileRequest)(nil),           // 26: platform.daemon.v1.UploadFileRequest
	(*FileInfo)(nil),                    // 27: platform.daemon.v1.FileInfo
	(*FileChunk)(nil),                   // 28: platform.daemon.v1.FileChunk
	(*FileDone)(nil),                    // 29: platform.daemon.v1.FileDone
	(*SaveSettingsCommand)(nil),         // 30: platform.daemon.v1.SaveSettingsCommand
	(*AddWireguardInterface)(nil),       // 31: platform.daemon.v1.AddWireguardInterface
	(*RemoveWireguardInterface)(nil),    // 32: platform.daemon.v1.RemoveWireguardInterface
	(*SetSTUNServerCommand)(nil),        // 33: platform.daemon.v1.SetSTUNServerCommand
	(*SystemStats)(nil),                 // 34: platform.daemon.v1.SystemStats
	(*WireguardInterface)(nil),          // 35: platform.daemon.v1.WireguardInterface
}
var file_platform_daemon_v1_stream_proto_depIdxs = []int32{
	2,  // 0: platform.daemon.v1.DaemonMessage.heartbeat:type_name -> platform.daemon.v1.Heartbeat
	3,  // 1: platform.daemon.v1.DaemonMessage.shutdown_alert:type_name -> platform.daemon.v1.ShutdownAlert
	4,  // 2: platform.daemon.v1.DaemonMessage.os_update_diff:type_name -> platform.daemon.v1.OSUpdateDiff
	5,  // 3: platform.daemon.v1.DaemonMessage.current_daemon_version:type_name -> platform.daemon.v1.CurrentDaemonVersion
	34, // 4: platform.daemon.v1.DaemonMessage.system_stats:type_name -> platform.daemon.v1.SystemStats
	6,  // 5: platform.daemon.v1.DaemonMessage.device_initialized:type_name -> platform.daemon.v1.DeviceInitialized
	8,  // 6: platform.daemon.v1.DaemonMessage.upload_file_ready:type_name -> platform.daemon.v1.UploadFileReady
	9,  // 7: platform.daemon.v1.DaemonMessage.upload_file_chunk_completed:type_name -> platform.daemon.v1.UploadFileChunkCompleted
	10, // 8: platform.daemon.v1.DaemonMessage.settings_saved:type_name -> platform.daemon.v1.SettingsSaved
	11, // 9: platform.daemon.v1.DaemonMessage.wireguard_interface_added:type_name -> platform.daemon.v1.WireguardInterfaceAdded
	12, // 10: platform.daemon.v1.DaemonMessage.wireguard_interface_removed:type_name -> platform.daemon.v1.WireguardInterfaceRemoved
	13, // 11: platform.daemon.v1.DaemonMessage.stun_address:type_name -> platform.daemon.v1.STUNAddress
	2,  // 12: platform.daemon.v1.ServerMessage.heartbeat:type_name -> platform.daemon.v1.Heartbeat
	14, // 13: platform.daemon.v1.ServerMessage.shutdown:type_name -> platform.daemon.v1.ShutdownCommand
	15, // 14: platform.daemon.v1.ServerMessage.restart:type_name -> platform.daemon.v1.RestartCommand
	16, // 15: platform.daemon.v1.ServerMessage.request_os_update_diff:type_name -> platform.daemon.v1.RequestOSUpdateDiff
	17, // 16: platform.daemon.v1.ServerMessage.request_current_daemon_version:type_name -> platform.daemon.v1.RequestCurrentDaemonVersion
	18, // 17: platform.daemon.v1.ServerMessage.change_daemon_version_command:type_name -> platform.daemon.v1.ChangeDaemonVersionCommand
	19, // 18: platform.daemon.v1.ServerMessage.install_os_update_command:type_name -> platform.daemon.v1.InstallOSUpdateCommand
	20, // 19: platform.daemon.v1.ServerMessage.set_system_image_command:type_name -> platform.daemon.v1.SetSystemImageCommand
	22, // 20: platform.daemon.v1.ServerMessage.set_user_password_command:type_name -> platform.daemon.v1.SetUserPasswordCommand
	23, // 21: platform.daemon.v1.ServerMessage.set_time_zone_command:type_name -> platform.daemon.v1.SetTimeZoneCommand
	24, // 22: platform.daemon.v1.ServerMessage.add_mdns_host_command:type_name -> platform.daemon.v1.AddMdnsHostCommand
	25, // 23: platform.daemon.v1.ServerMessage.remove_mdns_host_command:type_name -> platform.daemon.v1.RemoveMdnsHostCommand
	21, // 24: platform.daemon.v1.ServerMessage.initialize_device_command:type_name -> platform.daemon.v1.InitializeDeviceCommand
	26, // 25: platform.daemon.v1.ServerMessage.upload_file_request:type_name -> platform.daemon.v1.UploadFileRequest
	30, // 26: platform.daemon.v1.ServerMessage.save_settings_command:type_name -> platform.daemon.v1.SaveSettingsCommand
	31, // 27: platform.daemon.v1.ServerMessage.add_wireguard_interface:type_name -> platform.daemon.v1.AddWireguardInterface
	32, // 28: platform.daemon.v1.ServerMessage.remove_wireguard_interface:type_name -> platform.daemon.v1.RemoveWireguardInterface
	33, // 29: platform.daemon.v1.ServerMessage.set_stun_server_command:type_name -> platform.daemon.v1.SetSTUNServerCommand
	7,  // 30: platform.daemon.v1.OSUpdateDiff.error:type_name -> platform.daemon.v1.DaemonError
	7,  // 31: platform.daemon.v1.CurrentDaemonVersion.error:type_name -> platform.daemon.v1.DaemonError
	7,  // 32: platform.daemon.v1.DeviceInitialized.error:type_name -> platform.daemon.v1.DaemonError
	7,  // 33: platform.daemon.v1.SettingsSaved.error:type_name -> platform.daemon.v1.DaemonError
	7,  // 34: platform.daemon.v1.WireguardInterfaceAdded.error:type_name -> platform.daemon.v1.DaemonError
	7,  // 35: platform.daemon.v1.WireguardInterfaceRemoved.error:type_name -> platform.daemon.v1.DaemonError
	22, // 36: platform.daemon.v1.InitializeDeviceCommand.user:type_name -> platform.daemon.v1.SetUserPasswordCommand
	23, // 37: platform.daemon.v1.InitializeDeviceCommand.time_zone:type_name -> platform.daemon.v1.SetTimeZoneCommand
	27, // 38: platform.daemon.v1.UploadFileRequest.info:type_name -> platform.daemon.v1.FileInfo
	28, // 39: platform.daemon.v1.UploadFileRequest.chunk:type_name -> platform.daemon.v1.FileChunk
	29, // 40: platform.daemon.v1.UploadFileRequest.done:type_name -> platform.daemon.v1.FileDone
	35, // 41: platform.daemon.v1.AddWireguardInterface.interface:type_name -> platform.daemon.v1.WireguardInterface
	0,  // 42: platform.daemon.v1.DaemonStreamService.Communicate:input_type -> platform.daemon.v1.DaemonMessage
	1,  // 43: platform.daemon.v1.DaemonStreamService.Communicate:output_type -> platform.daemon.v1.ServerMessage
	43, // [43:44] is the sub-list for method output_type
	42, // [42:43] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_platform_daemon_v1_stream_proto_init() }
func file_platform_daemon_v1_stream_proto_init() {
	if File_platform_daemon_v1_stream_proto != nil {
		return
	}
	file_platform_daemon_v1_system_proto_init()
	file_platform_daemon_v1_wireguard_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_platform_daemon_v1_stream_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*DaemonMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ServerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Heartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ShutdownAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*OSUpdateDiff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CurrentDaemonVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DeviceInitialized); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DaemonError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UploadFileReady); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UploadFileChunkCompleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SettingsSaved); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*WireguardInterfaceAdded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*WireguardInterfaceRemoved); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*STUNAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ShutdownCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*RestartCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*RequestOSUpdateDiff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*RequestCurrentDaemonVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ChangeDaemonVersionCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*InstallOSUpdateCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*SetSystemImageCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*InitializeDeviceCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*SetUserPasswordCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*SetTimeZoneCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*AddMdnsHostCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveMdnsHostCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*UploadFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*FileChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*FileDone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*SaveSettingsCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*AddWireguardInterface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveWireguardInterface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_daemon_v1_stream_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*SetSTUNServerCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_platform_daemon_v1_stream_proto_msgTypes[0].OneofWrappers = []any{
		(*DaemonMessage_Heartbeat)(nil),
		(*DaemonMessage_ShutdownAlert)(nil),
		(*DaemonMessage_OsUpdateDiff)(nil),
		(*DaemonMessage_CurrentDaemonVersion)(nil),
		(*DaemonMessage_SystemStats)(nil),
		(*DaemonMessage_DeviceInitialized)(nil),
		(*DaemonMessage_UploadFileReady)(nil),
		(*DaemonMessage_UploadFileChunkCompleted)(nil),
		(*DaemonMessage_SettingsSaved)(nil),
		(*DaemonMessage_WireguardInterfaceAdded)(nil),
		(*DaemonMessage_WireguardInterfaceRemoved)(nil),
		(*DaemonMessage_StunAddress)(nil),
	}
	file_platform_daemon_v1_stream_proto_msgTypes[1].OneofWrappers = []any{
		(*ServerMessage_Heartbeat)(nil),
		(*ServerMessage_Shutdown)(nil),
		(*ServerMessage_Restart)(nil),
		(*ServerMessage_RequestOsUpdateDiff)(nil),
		(*ServerMessage_RequestCurrentDaemonVersion)(nil),
		(*ServerMessage_ChangeDaemonVersionCommand)(nil),
		(*ServerMessage_InstallOsUpdateCommand)(nil),
		(*ServerMessage_SetSystemImageCommand)(nil),
		(*ServerMessage_SetUserPasswordCommand)(nil),
		(*ServerMessage_SetTimeZoneCommand)(nil),
		(*ServerMessage_AddMdnsHostCommand)(nil),
		(*ServerMessage_RemoveMdnsHostCommand)(nil),
		(*ServerMessage_InitializeDeviceCommand)(nil),
		(*ServerMessage_UploadFileRequest)(nil),
		(*ServerMessage_SaveSettingsCommand)(nil),
		(*ServerMessage_AddWireguardInterface)(nil),
		(*ServerMessage_RemoveWireguardInterface)(nil),
		(*ServerMessage_SetStunServerCommand)(nil),
	}
	file_platform_daemon_v1_stream_proto_msgTypes[26].OneofWrappers = []any{
		(*UploadFileRequest_Info)(nil),
		(*UploadFileRequest_Chunk)(nil),
		(*UploadFileRequest_Done)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_platform_daemon_v1_stream_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_platform_daemon_v1_stream_proto_goTypes,
		DependencyIndexes: file_platform_daemon_v1_stream_proto_depIdxs,
		MessageInfos:      file_platform_daemon_v1_stream_proto_msgTypes,
	}.Build()
	File_platform_daemon_v1_stream_proto = out.File
	file_platform_daemon_v1_stream_proto_rawDesc = nil
	file_platform_daemon_v1_stream_proto_goTypes = nil
	file_platform_daemon_v1_stream_proto_depIdxs = nil
}
