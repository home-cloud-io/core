// @generated by protoc-gen-es v1.6.0 with parameter "target=ts"
// @generated from file platform/daemon/v1/wireguard.proto (package platform.daemon.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message platform.daemon.v1.WireguardConfig
 */
export class WireguardConfig extends Message<WireguardConfig> {
  /**
   * @generated from field: repeated platform.daemon.v1.WireguardInterface interfaces = 1;
   */
  interfaces: WireguardInterface[] = [];

  constructor(data?: PartialMessage<WireguardConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "platform.daemon.v1.WireguardConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "interfaces", kind: "message", T: WireguardInterface, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WireguardConfig {
    return new WireguardConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WireguardConfig {
    return new WireguardConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WireguardConfig {
    return new WireguardConfig().fromJsonString(jsonString, options);
  }

  static equals(a: WireguardConfig | PlainMessage<WireguardConfig> | undefined, b: WireguardConfig | PlainMessage<WireguardConfig> | undefined): boolean {
    return proto3.util.equals(WireguardConfig, a, b);
  }
}

/**
 * @generated from message platform.daemon.v1.WireguardInterface
 */
export class WireguardInterface extends Message<WireguardInterface> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string private_key = 3;
   */
  privateKey = "";

  /**
   * @generated from field: repeated string ips = 4;
   */
  ips: string[] = [];

  /**
   * @generated from field: uint32 listen_port = 5;
   */
  listenPort = 0;

  /**
   * @generated from field: repeated platform.daemon.v1.WireguardPeer peers = 6;
   */
  peers: WireguardPeer[] = [];

  constructor(data?: PartialMessage<WireguardInterface>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "platform.daemon.v1.WireguardInterface";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "private_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "ips", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "listen_port", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 6, name: "peers", kind: "message", T: WireguardPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WireguardInterface {
    return new WireguardInterface().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WireguardInterface {
    return new WireguardInterface().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WireguardInterface {
    return new WireguardInterface().fromJsonString(jsonString, options);
  }

  static equals(a: WireguardInterface | PlainMessage<WireguardInterface> | undefined, b: WireguardInterface | PlainMessage<WireguardInterface> | undefined): boolean {
    return proto3.util.equals(WireguardInterface, a, b);
  }
}

/**
 * @generated from message platform.daemon.v1.WireguardPeer
 */
export class WireguardPeer extends Message<WireguardPeer> {
  /**
   * @generated from field: string public_key = 1;
   */
  publicKey = "";

  /**
   * @generated from field: repeated string allowed_ips = 2;
   */
  allowedIps: string[] = [];

  constructor(data?: PartialMessage<WireguardPeer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "platform.daemon.v1.WireguardPeer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "public_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "allowed_ips", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WireguardPeer {
    return new WireguardPeer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WireguardPeer {
    return new WireguardPeer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WireguardPeer {
    return new WireguardPeer().fromJsonString(jsonString, options);
  }

  static equals(a: WireguardPeer | PlainMessage<WireguardPeer> | undefined, b: WireguardPeer | PlainMessage<WireguardPeer> | undefined): boolean {
    return proto3.util.equals(WireguardPeer, a, b);
  }
}

