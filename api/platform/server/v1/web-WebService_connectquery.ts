// @generated by protoc-gen-connect-query v1.1.3 with parameter "target=ts"
// @generated from file platform/server/v1/web.proto (package platform.server.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MethodKind } from "@bufbuild/protobuf";
import { ChangeDaemonVersionRequest, ChangeDaemonVersionResponse, CheckForContainerUpdatesRequest, CheckForContainerUpdatesResponse, CheckForSystemUpdatesRequest, CheckForSystemUpdatesResponse, DeleteAppRequest, DeleteAppResponse, GetSystemStatsRequest, GetSystemStatsResponse, InstallAppRequest, InstallAppResponse, InstallOSUpdateRequest, InstallOSUpdateResponse, RestartHostRequest, RestartHostResponse, SetSystemImageRequest, SetSystemImageResponse, ShutdownHostRequest, ShutdownHostResponse, UpdateAppRequest, UpdateAppResponse } from "./web_pb.js";

/**
 * @generated from rpc platform.server.v1.WebService.ShutdownHost
 */
export const shutdownHost = {
  localName: "shutdownHost",
  name: "ShutdownHost",
  kind: MethodKind.Unary,
  I: ShutdownHostRequest,
  O: ShutdownHostResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
} as const;

/**
 * @generated from rpc platform.server.v1.WebService.RestartHost
 */
export const restartHost = {
  localName: "restartHost",
  name: "RestartHost",
  kind: MethodKind.Unary,
  I: RestartHostRequest,
  O: RestartHostResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
} as const;

/**
 * @generated from rpc platform.server.v1.WebService.InstallApp
 */
export const installApp = {
  localName: "installApp",
  name: "InstallApp",
  kind: MethodKind.Unary,
  I: InstallAppRequest,
  O: InstallAppResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
} as const;

/**
 * @generated from rpc platform.server.v1.WebService.DeleteApp
 */
export const deleteApp = {
  localName: "deleteApp",
  name: "DeleteApp",
  kind: MethodKind.Unary,
  I: DeleteAppRequest,
  O: DeleteAppResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
} as const;

/**
 * @generated from rpc platform.server.v1.WebService.UpdateApp
 */
export const updateApp = {
  localName: "updateApp",
  name: "UpdateApp",
  kind: MethodKind.Unary,
  I: UpdateAppRequest,
  O: UpdateAppResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
} as const;

/**
 * @generated from rpc platform.server.v1.WebService.CheckForSystemUpdates
 */
export const checkForSystemUpdates = {
  localName: "checkForSystemUpdates",
  name: "CheckForSystemUpdates",
  kind: MethodKind.Unary,
  I: CheckForSystemUpdatesRequest,
  O: CheckForSystemUpdatesResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
} as const;

/**
 * @generated from rpc platform.server.v1.WebService.CheckForContainerUpdates
 */
export const checkForContainerUpdates = {
  localName: "checkForContainerUpdates",
  name: "CheckForContainerUpdates",
  kind: MethodKind.Unary,
  I: CheckForContainerUpdatesRequest,
  O: CheckForContainerUpdatesResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
} as const;

/**
 * @generated from rpc platform.server.v1.WebService.ChangeDaemonVersion
 */
export const changeDaemonVersion = {
  localName: "changeDaemonVersion",
  name: "ChangeDaemonVersion",
  kind: MethodKind.Unary,
  I: ChangeDaemonVersionRequest,
  O: ChangeDaemonVersionResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
} as const;

/**
 * @generated from rpc platform.server.v1.WebService.InstallOSUpdate
 */
export const installOSUpdate = {
  localName: "installOSUpdate",
  name: "InstallOSUpdate",
  kind: MethodKind.Unary,
  I: InstallOSUpdateRequest,
  O: InstallOSUpdateResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
} as const;

/**
 * @generated from rpc platform.server.v1.WebService.SetSystemImage
 */
export const setSystemImage = {
  localName: "setSystemImage",
  name: "SetSystemImage",
  kind: MethodKind.Unary,
  I: SetSystemImageRequest,
  O: SetSystemImageResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
} as const;

/**
 * @generated from rpc platform.server.v1.WebService.GetSystemStats
 */
export const getSystemStats = {
  localName: "getSystemStats",
  name: "GetSystemStats",
  kind: MethodKind.Unary,
  I: GetSystemStatsRequest,
  O: GetSystemStatsResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
} as const;
