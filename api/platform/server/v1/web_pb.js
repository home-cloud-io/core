// @generated by protoc-gen-es v1.6.0 with parameter "target=js"
// @generated from file platform/server/v1/web.proto (package platform.server.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum platform.server.v1.AppStatus
 */
export const AppStatus = proto3.makeEnum(
  "platform.server.v1.AppStatus",
  [
    {no: 0, name: "APP_STATUS_UNKNOWN", localName: "UNKNOWN"},
    {no: 1, name: "APP_STATUS_HEALTHY", localName: "HEALTHY"},
    {no: 2, name: "APP_STATUS_UNHEALTHY", localName: "UNHEALTHY"},
  ],
);

/**
 * @generated from message platform.server.v1.ShutdownHostRequest
 */
export const ShutdownHostRequest = proto3.makeMessageType(
  "platform.server.v1.ShutdownHostRequest",
  [],
);

/**
 * @generated from message platform.server.v1.ShutdownHostResponse
 */
export const ShutdownHostResponse = proto3.makeMessageType(
  "platform.server.v1.ShutdownHostResponse",
  [],
);

/**
 * @generated from message platform.server.v1.RestartHostRequest
 */
export const RestartHostRequest = proto3.makeMessageType(
  "platform.server.v1.RestartHostRequest",
  [],
);

/**
 * @generated from message platform.server.v1.RestartHostResponse
 */
export const RestartHostResponse = proto3.makeMessageType(
  "platform.server.v1.RestartHostResponse",
  [],
);

/**
 * @generated from message platform.server.v1.InstallAppRequest
 */
export const InstallAppRequest = proto3.makeMessageType(
  "platform.server.v1.InstallAppRequest",
  () => [
    { no: 1, name: "chart", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "repo", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "release", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "values", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message platform.server.v1.InstallAppResponse
 */
export const InstallAppResponse = proto3.makeMessageType(
  "platform.server.v1.InstallAppResponse",
  [],
);

/**
 * @generated from message platform.server.v1.DeleteAppRequest
 */
export const DeleteAppRequest = proto3.makeMessageType(
  "platform.server.v1.DeleteAppRequest",
  () => [
    { no: 1, name: "release", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message platform.server.v1.DeleteAppResponse
 */
export const DeleteAppResponse = proto3.makeMessageType(
  "platform.server.v1.DeleteAppResponse",
  [],
);

/**
 * @generated from message platform.server.v1.UpdateAppRequest
 */
export const UpdateAppRequest = proto3.makeMessageType(
  "platform.server.v1.UpdateAppRequest",
  () => [
    { no: 1, name: "chart", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "repo", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "release", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "values", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message platform.server.v1.UpdateAppResponse
 */
export const UpdateAppResponse = proto3.makeMessageType(
  "platform.server.v1.UpdateAppResponse",
  [],
);

/**
 * @generated from message platform.server.v1.CheckForSystemUpdatesRequest
 */
export const CheckForSystemUpdatesRequest = proto3.makeMessageType(
  "platform.server.v1.CheckForSystemUpdatesRequest",
  [],
);

/**
 * @generated from message platform.server.v1.CheckForSystemUpdatesResponse
 */
export const CheckForSystemUpdatesResponse = proto3.makeMessageType(
  "platform.server.v1.CheckForSystemUpdatesResponse",
  () => [
    { no: 1, name: "daemon_versions", kind: "message", T: DaemonVersions },
    { no: 2, name: "os_diff", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message platform.server.v1.DaemonVersions
 */
export const DaemonVersions = proto3.makeMessageType(
  "platform.server.v1.DaemonVersions",
  () => [
    { no: 1, name: "current", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "latest", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message platform.server.v1.CheckForContainerUpdatesRequest
 */
export const CheckForContainerUpdatesRequest = proto3.makeMessageType(
  "platform.server.v1.CheckForContainerUpdatesRequest",
  [],
);

/**
 * @generated from message platform.server.v1.CheckForContainerUpdatesResponse
 */
export const CheckForContainerUpdatesResponse = proto3.makeMessageType(
  "platform.server.v1.CheckForContainerUpdatesResponse",
  () => [
    { no: 1, name: "image_versions", kind: "message", T: ImageVersion, repeated: true },
  ],
);

/**
 * @generated from message platform.server.v1.ImageVersion
 */
export const ImageVersion = proto3.makeMessageType(
  "platform.server.v1.ImageVersion",
  () => [
    { no: 1, name: "image", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "current", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "latest", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message platform.server.v1.ChangeDaemonVersionRequest
 */
export const ChangeDaemonVersionRequest = proto3.makeMessageType(
  "platform.server.v1.ChangeDaemonVersionRequest",
  () => [
    { no: 1, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "vendor_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "src_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message platform.server.v1.ChangeDaemonVersionResponse
 */
export const ChangeDaemonVersionResponse = proto3.makeMessageType(
  "platform.server.v1.ChangeDaemonVersionResponse",
  [],
);

/**
 * @generated from message platform.server.v1.InstallOSUpdateRequest
 */
export const InstallOSUpdateRequest = proto3.makeMessageType(
  "platform.server.v1.InstallOSUpdateRequest",
  [],
);

/**
 * @generated from message platform.server.v1.InstallOSUpdateResponse
 */
export const InstallOSUpdateResponse = proto3.makeMessageType(
  "platform.server.v1.InstallOSUpdateResponse",
  [],
);

/**
 * @generated from message platform.server.v1.SetSystemImageRequest
 */
export const SetSystemImageRequest = proto3.makeMessageType(
  "platform.server.v1.SetSystemImageRequest",
  () => [
    { no: 1, name: "current_image", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "requested_image", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message platform.server.v1.SetSystemImageResponse
 */
export const SetSystemImageResponse = proto3.makeMessageType(
  "platform.server.v1.SetSystemImageResponse",
  [],
);

/**
 * @generated from message platform.server.v1.AppsHealthCheckRequest
 */
export const AppsHealthCheckRequest = proto3.makeMessageType(
  "platform.server.v1.AppsHealthCheckRequest",
  [],
);

/**
 * @generated from message platform.server.v1.AppsHealthCheckResponse
 */
export const AppsHealthCheckResponse = proto3.makeMessageType(
  "platform.server.v1.AppsHealthCheckResponse",
  () => [
    { no: 1, name: "checks", kind: "message", T: AppHealth, repeated: true },
  ],
);

/**
 * @generated from message platform.server.v1.AppHealth
 */
export const AppHealth = proto3.makeMessageType(
  "platform.server.v1.AppHealth",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "status", kind: "enum", T: proto3.getEnumType(AppStatus) },
  ],
);

