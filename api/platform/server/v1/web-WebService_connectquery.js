// @generated by protoc-gen-connect-query v1.1.3 with parameter "target=js"
// @generated from file platform/server/v1/web.proto (package platform.server.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MethodKind } from "@bufbuild/protobuf";
import { AppsHealthCheckRequest, AppsHealthCheckResponse, ChangeDaemonVersionRequest, ChangeDaemonVersionResponse, CheckForContainerUpdatesRequest, CheckForContainerUpdatesResponse, CheckForSystemUpdatesRequest, CheckForSystemUpdatesResponse, DeleteAppRequest, DeleteAppResponse, GetAppsInStoreRequest, GetAppsInStoreResponse, GetDeviceSettingsRequest, GetDeviceSettingsResponse, GetDeviceUsageStatsRequest, GetDeviceUsageStatsResponse, GetInstalledAppsRequest, GetInstalledAppsResponse, GetSystemStatsRequest, GetSystemStatsResponse, InitializeDeviceRequest, InitializeDeviceResponse, InstallAppRequest, InstallAppResponse, InstallOSUpdateRequest, InstallOSUpdateResponse, IsDeviceSetupRequest, IsDeviceSetupResponse, LoginRequest, LoginResponse, RestartHostRequest, RestartHostResponse, SetSystemImageRequest, SetSystemImageResponse, ShutdownHostRequest, ShutdownHostResponse, UpdateAppRequest, UpdateAppResponse } from "./web_pb.js";

/**
 * @generated from rpc platform.server.v1.WebService.ShutdownHost
 */
export const shutdownHost = {
  localName: "shutdownHost",
  name: "ShutdownHost",
  kind: MethodKind.Unary,
  I: ShutdownHostRequest,
  O: ShutdownHostResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
};

/**
 * @generated from rpc platform.server.v1.WebService.RestartHost
 */
export const restartHost = {
  localName: "restartHost",
  name: "RestartHost",
  kind: MethodKind.Unary,
  I: RestartHostRequest,
  O: RestartHostResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
};

/**
 * @generated from rpc platform.server.v1.WebService.InstallApp
 */
export const installApp = {
  localName: "installApp",
  name: "InstallApp",
  kind: MethodKind.Unary,
  I: InstallAppRequest,
  O: InstallAppResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
};

/**
 * @generated from rpc platform.server.v1.WebService.DeleteApp
 */
export const deleteApp = {
  localName: "deleteApp",
  name: "DeleteApp",
  kind: MethodKind.Unary,
  I: DeleteAppRequest,
  O: DeleteAppResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
};

/**
 * @generated from rpc platform.server.v1.WebService.UpdateApp
 */
export const updateApp = {
  localName: "updateApp",
  name: "UpdateApp",
  kind: MethodKind.Unary,
  I: UpdateAppRequest,
  O: UpdateAppResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
};

/**
 * @generated from rpc platform.server.v1.WebService.CheckForSystemUpdates
 */
export const checkForSystemUpdates = {
  localName: "checkForSystemUpdates",
  name: "CheckForSystemUpdates",
  kind: MethodKind.Unary,
  I: CheckForSystemUpdatesRequest,
  O: CheckForSystemUpdatesResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
};

/**
 * @generated from rpc platform.server.v1.WebService.CheckForContainerUpdates
 */
export const checkForContainerUpdates = {
  localName: "checkForContainerUpdates",
  name: "CheckForContainerUpdates",
  kind: MethodKind.Unary,
  I: CheckForContainerUpdatesRequest,
  O: CheckForContainerUpdatesResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
};

/**
 * @generated from rpc platform.server.v1.WebService.ChangeDaemonVersion
 */
export const changeDaemonVersion = {
  localName: "changeDaemonVersion",
  name: "ChangeDaemonVersion",
  kind: MethodKind.Unary,
  I: ChangeDaemonVersionRequest,
  O: ChangeDaemonVersionResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
};

/**
 * @generated from rpc platform.server.v1.WebService.InstallOSUpdate
 */
export const installOSUpdate = {
  localName: "installOSUpdate",
  name: "InstallOSUpdate",
  kind: MethodKind.Unary,
  I: InstallOSUpdateRequest,
  O: InstallOSUpdateResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
};

/**
 * @generated from rpc platform.server.v1.WebService.SetSystemImage
 */
export const setSystemImage = {
  localName: "setSystemImage",
  name: "SetSystemImage",
  kind: MethodKind.Unary,
  I: SetSystemImageRequest,
  O: SetSystemImageResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
};

/**
 * @generated from rpc platform.server.v1.WebService.AppsHealthCheck
 */
export const appsHealthCheck = {
  localName: "appsHealthCheck",
  name: "AppsHealthCheck",
  kind: MethodKind.Unary,
  I: AppsHealthCheckRequest,
  O: AppsHealthCheckResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
};

/**
 * @generated from rpc platform.server.v1.WebService.GetSystemStats
 */
export const getSystemStats = {
  localName: "getSystemStats",
  name: "GetSystemStats",
  kind: MethodKind.Unary,
  I: GetSystemStatsRequest,
  O: GetSystemStatsResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
};

/**
 * Check to validate if the device has gone through the onboarding process
 *
 * @generated from rpc platform.server.v1.WebService.IsDeviceSetup
 */
export const isDeviceSetup = {
  localName: "isDeviceSetup",
  name: "IsDeviceSetup",
  kind: MethodKind.Unary,
  I: IsDeviceSetupRequest,
  O: IsDeviceSetupResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
};

/**
 * Initialize the device with the user's credentials and settings
 *
 * @generated from rpc platform.server.v1.WebService.InitializeDevice
 */
export const initializeDevice = {
  localName: "initializeDevice",
  name: "InitializeDevice",
  kind: MethodKind.Unary,
  I: InitializeDeviceRequest,
  O: InitializeDeviceResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
};

/**
 * Login to the device
 *
 * @generated from rpc platform.server.v1.WebService.Login
 */
export const login = {
  localName: "login",
  name: "Login",
  kind: MethodKind.Unary,
  I: LoginRequest,
  O: LoginResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
};

/**
 * Get usage statistics for the device
 *
 * @generated from rpc platform.server.v1.WebService.GetDeviceUsageStats
 */
export const getDeviceUsageStats = {
  localName: "getDeviceUsageStats",
  name: "GetDeviceUsageStats",
  kind: MethodKind.Unary,
  I: GetDeviceUsageStatsRequest,
  O: GetDeviceUsageStatsResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
};

/**
 * Get the status of all installed apps
 *
 * @generated from rpc platform.server.v1.WebService.GetInstalledApps
 */
export const getInstalledApps = {
  localName: "getInstalledApps",
  name: "GetInstalledApps",
  kind: MethodKind.Unary,
  I: GetInstalledAppsRequest,
  O: GetInstalledAppsResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
};

/**
 * Get all apps available in the store
 *
 * @generated from rpc platform.server.v1.WebService.GetAppsInStore
 */
export const getAppsInStore = {
  localName: "getAppsInStore",
  name: "GetAppsInStore",
  kind: MethodKind.Unary,
  I: GetAppsInStoreRequest,
  O: GetAppsInStoreResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
};

/**
 * Get the device settings
 *
 * @generated from rpc platform.server.v1.WebService.GetDeviceSettings
 */
export const getDeviceSettings = {
  localName: "getDeviceSettings",
  name: "GetDeviceSettings",
  kind: MethodKind.Unary,
  I: GetDeviceSettingsRequest,
  O: GetDeviceSettingsResponse,
  service: {
    typeName: "platform.server.v1.WebService"
  }
};
